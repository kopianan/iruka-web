@using Iruka.Models;
@using Iruka.DAL;
@model Iruka.Models.UserDTO

@{
    ViewBag.Title = "Index";
}

@section css{

    <link rel="stylesheet" href="~/template/src/assets/css/shared/style.css">
    <link rel="stylesheet" href="~/template/src/assets/css/demo_1/style.css">
    <link rel="shortcut icon" href="~/template/src/assets/images/favicon.png" />

    <link href="~/Css/avatar-upload.min.css" rel="stylesheet" />

    <style>
        .certificate-container {
            margin: 20px auto;
            width: 300px;
            height: 192px;
            position: relative;
            border: 6px solid #F8F8F8;
            box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.1);
        }

            .certificate-container > div {
                width: 100%;
                height: 100%;
                background-size: cover;
                background-repeat: no-repeat;
                background-position: center;
            }

        @@media(max-width: 1366px) {
            .certificate-container {
                width: 100%;
            }
        }

        .inner-addon {
            position: relative;
        }

            .inner-addon .glyphicon {
                position: absolute;
                padding: 15px;
                pointer-events: none;
            }

        .left-addon .glyphicon {
            left: 0px;
        }

        .right-addon .glyphicon {
            right: 0px;
        }

        .left-addon input {
            padding-left: 30px;
        }

        .right-addon input {
            padding-right: 30px;
        }
    </style>
}

@section js{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/js/user.min.js"></script>

    <script>
        $(document).ready(function () {
            Global.InitDatePicker($('.datepicker'));
            DefineGroomerSection();

            $('#EndClientEnum').change(function () {
                DefineGroomerSection();
            });
        });

        function DefineGroomerSection() {
            if ($('#EndClientEnum').val() == 0) {
                $('#groomer-section').removeClass('d-none');
            } else {
                $('#groomer-section').addClass('d-none');
            }
        }
    </script>
}

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Picture, new { @id = "PicturePath" })
    @Html.HiddenFor(m => m.Base64URL, new { @id = "Base64URL" })
    @Html.HiddenFor(m => m.Certificate, new { @id = "CertificatePath" })
    @Html.HiddenFor(m => m.Base64URLCertificate, new { @id = "Base64URLCertificate" })

    <div class="row">
        <div class="col-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h2>Create End User</h2>
                    <hr />
                    <div class="row">
                        <div class="offset-lg-4 col-lg-4 col-12">
                            <div class="form-group row">
                                <div class="col-12">
                                    <div class="avatar-upload">
                                        <div class="avatar-edit">
                                            <input type='file' id="imageUpload" accept=".png, .jpg, .jpeg" />
                                            <label for="imageUpload"></label>
                                        </div>
                                        <div class="avatar-preview">
                                            <div id="imagePreview" style="background-image: url('../../Media/avatar-placeholder.png');">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-12">
                            <fieldset>
                                <legend>User Information</legend>
                                <hr />
                                <div class="form-group row">
                                    @Html.LabelFor(m => m.EndClientEnum, new { @class = "col-12 control-label" })
                                    <div class="col-12">
                                        @Html.EnumDropDownListFor(m => m.EndClientEnum, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.EndClientEnum, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(m => m.Name, new { @class = "col-12 control-label" })
                                    <div class="col-12">
                                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-12 control-label" })
                                    <div class="col-12">
                                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(m => m.Address, new { @class = "col-12 control-label" })
                                    <div class="col-12">
                                        @Html.TextAreaFor(m => m.Address, new { @class = "form-control", rows = 2 })
                                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </fieldset>
                        </div>

                        <div class="col-lg-6 col-12">
                            <fieldset>
                                <legend>Account Credentials</legend>
                                <hr />

                                <div class="form-group row">
                                    @Html.LabelFor(m => m.Email, new { @class = "col-12 control-label" })
                                    <div class="col-12">
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                        <p class="text-danger">@ViewBag.AccountExisted</p>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(m => m.Password, new { @class = "col-12 control-label" })
                                    <div class="col-12">
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-12 control-label" })
                                    <div class="col-12">
                                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(m => m.Description, new { @class = "col-12 control-label" })
                                    <div class="col-12">
                                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 2 })
                                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </fieldset>
                        </div>

                        <div class="col-12 d-none mt-3" id="groomer-section">
                            <div class="row">
                                <div class="col-lg-6 col-12">
                                    <fieldset>
                                        <legend>Groomer Information</legend>
                                        <hr />
                                        <div class="form-group row">
                                            @Html.LabelFor(m => m.Certificate, new { @class = "col-12 control-label" })
                                            <div class="col-12">
                                                <input type="file" id="certificateUpload" class="form-control" accept=".png, .jpg, .jpeg" />
                                                <div class="certificate-container d-none">
                                                    <div id="certificatePreview" style="background-image: url('');">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(m => m.PIC, new { @class = "col-12 control-label" })
                                            <div class="col-12">
                                                @Html.TextBoxFor(m => m.PIC, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.PIC, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(m => m.Styling, new { @class = "col-12 control-label" })
                                            <div class="col-12">
                                                @Html.EnumDropDownListFor(m => m.Styling, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Styling, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(m => m.Clipping, new { @class = "col-12 control-label" })
                                            <div class="col-12">
                                                @Html.EnumDropDownListFor(m => m.Clipping, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Clipping, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(m => m.YearsOfExperience, new { @class = "col-12 control-label" })
                                            <div class="col-12">
                                                @Html.TextBoxFor(m => m.YearsOfExperience, new { @class = "form-control", @type = "number", @Value = 0 })
                                                @Html.ValidationMessageFor(m => m.YearsOfExperience, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(m => m.KeyFeatures, new { @class = "col-12 control-label" })
                                            <div class="col-12">
                                                @Html.TextBoxFor(m => m.KeyFeatures, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.KeyFeatures, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(m => m.CoverageArea, new { @class = "col-12 control-label" })
                                            <div class="col-12">
                                                @Html.TextBoxFor(m => m.CoverageArea, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.CoverageArea, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <div class="col-12">
                                                <div class="custom-control custom-checkbox custom-control-inline">
                                                    <input type="checkbox" name="Availability" class="custom-control-input" value="true" id="Availability">
                                                    <label class="custom-control-label" for="Availability" style="padding-top: 4px">Availability</label>
                                                </div>
                                                @Html.ValidationMessageFor(m => m.Availability, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>

                                <div class="col-lg-6 col-12">
                                    <fieldset>
                                        <legend>Training at Vivianna’s Grooming School</legend>
                                        <hr />
                                        <div class="form-group row">
                                            @Html.LabelFor(m => m.TrainingStartDateString, new { @class = "col-12 control-label" })
                                            <div class="col-12">
                                                @Html.TextBoxFor(m => m.TrainingStartDateString, new { @class = "form-control datepicker" })
                                                @Html.ValidationMessageFor(m => m.TrainingStartDateString, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(m => m.TrainingYears, new { @class = "col-12 control-label" })
                                            <div class="col-12">
                                                @Html.TextBoxFor(m => m.TrainingYears, new { @class = "form-control", @type = "number", @Value = 0 })
                                                @Html.ValidationMessageFor(m => m.TrainingYears, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(m => m.TrainingCourses, new { @class = "col-12 control-label" })
                                            <div class="col-12">
                                                @Html.TextAreaFor(m => m.TrainingCourses, new { @class = "form-control", rows = 2 })
                                                @Html.ValidationMessageFor(m => m.TrainingCourses, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>
                            </div>
                        </div>

                        <div class="col-12">
                            <button type="submit" class="btn btn-success btn-fw float-right">
                                <i class="fa fa-plus-circle" aria-hidden="true"></i><span class="font-weight-bold">Create</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h3>End User List</h3>
                    <hr />
                    <div id="reloadTable">
                        @Html.Partial("/Views/Partial/Partial_EndUsersTable.cshtml")
                    </div>
                </div>
            </div>
        </div>
    </div>
}
